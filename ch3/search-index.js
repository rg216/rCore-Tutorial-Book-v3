var searchIndex = new Map(JSON.parse('[\
["os",{"doc":"The main module and entrypoint","t":"CHCCCCCQQHCCCCCCCSSSESSSFNNNNHNNNNHJFJFNNNNNNOONNHHNNHNNHNNNNNNNFNNNNNHNNNNNHHHHECFNNNNONNNNNSSFSSSONNNNCNHCHCNNNSHHHHHFFFFFFOONNNNNNNNNNCONNHONNNNNNNNHNONNNNNHNHNOOHNHNOHHOOHCCOONNNNNNNNNNNNNNNOFNNNONNNOOONNNNHPPPFGPNNNNNNNNNNNOOONNNNNNSSHHHFCHHOOHOFNNNNNONONNNO","n":["board","clear_bss","config","console","lang_items","loader","logging","print","println","rust_main","sbi","stacktrace","sync","syscall","task","timer","trap","CLOCK_FREQ","APP_BASE_ADDRESS","APP_SIZE_LIMIT","CLOCK_FREQ","KERNEL_STACK_SIZE","MAX_APP_NUM","USER_STACK_SIZE","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","panic","KERNEL_STACK","KernelStack","USER_STACK","UserStack","borrow","borrow","borrow_mut","borrow_mut","clone","clone","data","data","from","from","get_base_i","get_num_app","get_sp","get_sp","init_app_cx","into","into","load_apps","push_context","try_from","try_from","try_into","try_into","type_id","type_id","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","console_putchar","set_timer","shutdown","print_stack_trace","UPSafeCell","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_EXIT","SYSCALL_GET_TIME","SYSCALL_STATS","SYSCALL_TASKINFO","SYSCALL_WRITE","SYSCALL_YIELD","__private_field","borrow","borrow_mut","deref","from","fs","into","print_syscall_stats","process","syscall","taskinfo","try_from","try_into","type_id","FD_STDOUT","sys_write","sys_exit","sys_get_time","sys_yield","sys_get_taskinfo","TASK_MANAGER","TaskContext","TaskManager","TaskManagerInner","USER_RUNNED_TIME","UserStateTime","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","context","current_task","deref","deref","exit_current_and_run_next","f","find_next_task","from","from","from","from","from","get_start_time","get_task_running_time","get_total_user_time","get_user_time","inner","into","into","into","into","into","mark_current_exited","mark_current_exited","mark_current_suspended","mark_current_suspended","num_app","ra","run_first_task","run_first_task","run_next_task","run_next_task","s","show_task_time_statistics","show_total_user_time","sp","start_time","suspend_current_and_run_next","switch","task","tasks","total_usr_time","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","user_time_ms","TaskContext","borrow","borrow_mut","clone","f","from","goto_restore","into","ra","s","sp","try_from","try_into","type_id","zero_init","__switch","Exited","Ready","Running","TaskControlBlock","TaskStatus","UnInit","borrow","borrow","borrow_mut","borrow_mut","clone","clone","eq","from","from","into","into","runned_time_ms","task_cx","task_status","try_from","try_from","try_into","try_into","type_id","type_id","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms","set_next_trigger","TrapContext","context","enable_timer_interrupt","init","sepc","sstatus","trap_handler","x","TrapContext","app_init_context","borrow","borrow_mut","from","into","sepc","set_sp","sstatus","try_from","try_into","type_id","x"],"q":[[0,"os"],[17,"os::board"],[18,"os::config"],[24,"os::console"],[34,"os::lang_items"],[35,"os::loader"],[64,"os::logging"],[76,"os::sbi"],[79,"os::stacktrace"],[80,"os::sync"],[82,"os::sync::up"],[93,"os::syscall"],[113,"os::syscall::fs"],[115,"os::syscall::process"],[118,"os::syscall::taskinfo"],[119,"os::task"],[195,"os::task::context"],[210,"os::task::switch"],[211,"os::task::task"],[237,"os::timer"],[242,"os::trap"],[250,"os::trap::context"],[263,"core::fmt"],[264,"core::result"],[265,"core::any"],[266,"core::fmt"],[267,"log"],[268,"log"],[269,"core::option"]],"d":["Constants used in rCore for qemu","clear BSS segment","Constants used in rCore","SBI console driver, for text output","The panic handler","Loading user applications into memory","","print string macro","println string macro","the rust entry-point of os","SBI call wrappers","","Synchronization and interior mutability primitives","Implementation of syscalls","Task management implementation","RISC-V timer-related functionality","Trap handling functionality","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get base address of app i.","Get the total number of applications.","","","get app info with entry and sp and save <code>TrapContext</code> in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Load nth user app at [APP_BASE_ADDRESS + n * …","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","use sbi call to putchar in console (qemu uart handler)","use sbi call to set timer","use sbi call to shutdown the kernel","","","Uniprocessor interior mutability primitives","Wrap a static data structure inside it so that we are able …","","","Exclusive access inner data in UPSafeCell. Panic if the …","Returns the argument unchanged.","inner data","Calls <code>U::from(self)</code>.","User is responsible to guarantee that inner struct is only …","","","","","","","","","","","","","","Returns the argument unchanged.","File and filesystem-related syscalls","Calls <code>U::from(self)</code>.","a helper function to print syscall stats","Process management syscalls","handle syscall exception with <code>syscall_id</code> and other …","","","","","","write buf of length <code>len</code>  to a file with <code>fd</code>","task exits and submit an exit code","get time in milliseconds","current task gives up resources for other tasks","","Global variable: TASK_MANAGER","Task Context","The task manager, where all the tasks are managed.","Inner of Task Manager","Global variable: USER_RUNNED_TIME","The user app time statistics","","","","","","","","","","","","","Implementation of <code>TaskContext</code>","id of current <code>Running</code> task","","","exit current task,  then run next task","","Find next task to run and return task id.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","get total user time","","use inner value to get mutable access","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","exit current task","Change the status of current <code>Running</code> task into <code>Exited</code>.","suspend current task","Change the status of current <code>Running</code> task into <code>Ready</code>.","total number of tasks","return address ( e.g. __restore ) of __switch ASM function","run first task","Run the first task in task list.","rust next task","Switch current <code>Running</code> task to the task we have found, or …","callee saved registers:  s 0..11","show time statistics of individual task ","show total user time ","kernel stack pointer of app","","suspend current task, then run next task","Rust wrapper around <code>__switch</code>.","Types related to task management","task list","","","","","","","","","","","","","","","","","","Task Context","","","","","Returns the argument unchanged.","set task context {__restore ASM funciton, kernel stack, …","Calls <code>U::from(self)</code>.","return address ( e.g. __restore ) of __switch ASM function","callee saved registers:  s 0..11","kernel stack pointer of app","","","","init task context","Switch to the context of <code>next_task_cx_ptr</code>, saving the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","read the <code>mtime</code> register","get current time in milliseconds","set the next timer interrupt","Trap Context","","timer interrupt enabled","initialize CSR <code>stvec</code> as the entry of <code>__alltraps</code>","CSR sepc","CSR sstatus      ","handle an interrupt, exception, or system call from user …","general regs[0..31]","Trap Context","init app context","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","CSR sepc","set stack pointer to x_2 reg (sp)","CSR sstatus      ","","","","general regs[0..31]"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,6,6,6,6,0,0,0,0,0,10,11,10,11,10,11,10,11,10,11,0,0,10,11,0,10,11,0,10,10,11,10,11,10,11,0,14,14,14,14,14,0,14,14,14,14,14,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,20,20,20,20,20,0,20,0,0,0,0,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,25,27,26,33,28,25,27,26,33,28,25,27,0,33,25,27,0,30,26,26,33,28,25,27,26,26,0,26,26,26,33,28,25,27,0,26,0,26,26,30,0,26,0,26,30,0,0,30,28,0,0,0,33,28,26,33,28,25,27,26,33,28,25,27,26,33,28,25,27,28,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,32,32,32,0,0,32,31,32,31,32,31,32,32,31,32,31,32,31,31,31,31,32,31,32,31,32,0,0,0,0,0,0,0,0,0,13,13,0,13,0,13,13,13,13,13,13,13,13,13,13,13,13],"f":"`{{}b}```````{{}d}```````````````{ce{}{}}0{cc{}}1{fb}{c{{h{e}}}{}{}}0{cj{}}{{ln}A`}{Abd}````6666{AdAd}{AfAf}``77{AhAh}{{}Ah}{AdAh}{AfAh}3<<>{{AdAj}Ah}::::99`=={{AlAn}B`}{Alb}>{{}b}{ce{}{}}{{AlBb}b}??>{Ahb}0{B`d}4```33{{{Bd{c}}}{{Bf{c}}}{}}{cc{}}`5{c{{Bd{c}}}{}}{c{{h{e}}}{}{}}0{cj{}}```````88{Bh{{Bd{{Bj{Ah}}}}}}4`9:`{{Ah{Bj{Ah}}}Bl}`332`{{AhBnAh}Bl}{C`d}{{}Bl}00````````==========``{CbCd}{Cf{{Bd{Ch}}}}{{}b}`{Cd{{Cj{Ah}}}}<<<<<{CdAh}{{CdAh}Ah}{{}Ah}2`{ce{}{}}00005{Cdb}60``6{Cdd}71`77``7````{c{{h{e}}}{}{}}000000000{cj{}}0000``44{ClCl}`{cc{}}{AhCl}7```443{{}Cl}```````8888{CnCn}{D`D`}{{D`D`}B`}55;;```888877``<<{{}b}``00``{AjAj}``{{AhAh}Aj}>>8>`{{AjAh}b}`<<;`","c":[],"p":[[1,"unit"],[1,"never"],[5,"Arguments",263],[6,"Result",264],[5,"TypeId",265],[5,"Stdout",24],[1,"str"],[8,"Result",263],[5,"PanicInfo",266],[5,"KernelStack",35],[5,"UserStack",35],[1,"usize"],[5,"TrapContext",250],[5,"SimpleLogger",64],[5,"Metadata",267],[1,"bool"],[5,"Record",267],[5,"UPSafeCell",82],[5,"RefMut",268],[5,"SYSCALL_STATS",93],[1,"array"],[1,"isize"],[1,"u8"],[1,"i32"],[5,"TASK_MANAGER",119],[5,"TaskManager",119],[5,"USER_RUNNED_TIME",119],[5,"UserStateTime",119],[6,"Option",269],[5,"TaskContext",195],[5,"TaskControlBlock",211],[6,"TaskStatus",211],[5,"TaskManagerInner",119]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
