var searchIndex = new Map(JSON.parse('[\
["os",{"doc":"The main module and entrypoint","t":"CHCCCQQHCCCCCSFSFJSFSJSFOONNNNNNNNOOONNNNNNNNHNNNNNNOHNNHNNNNNNNNNNNNFNNNNHNNNNHFNNNNNHNNNNNHHHHECFNNNNONNNNNSSCCHSHHFCHOOHOFNNNNNONONNNO","n":["batch","clear_bss","console","lang_items","logging","print","println","rust_main","sbi","stacktrace","sync","syscall","trap","APP_BASE_ADDRESS","APP_MANAGER","APP_SIZE_LIMIT","AppManager","KERNEL_STACK","KERNEL_STACK_SIZE","KernelStack","MAX_APP_NUM","USER_STACK","USER_STACK_SIZE","UserStack","__private_field","app_start","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current_app","data","data","deref","from","from","from","from","get_current_app","get_sp","get_sp","init","into","into","into","into","load_app","move_to_next_app","num_app","print_app_info","print_app_info","push_context","run_next_app","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","panic","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","console_getchar","console_putchar","shutdown","print_stack_trace","UPSafeCell","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_EXIT","SYSCALL_WRITE","fs","process","syscall","FD_STDOUT","sys_write","sys_exit","TrapContext","context","init","sepc","sstatus","trap_handler","x","TrapContext","app_init_context","borrow","borrow_mut","from","into","sepc","set_sp","sstatus","try_from","try_into","type_id","x"],"q":[[0,"os"],[13,"os::batch"],[69,"os::console"],[79,"os::lang_items"],[80,"os::logging"],[92,"os::sbi"],[95,"os::stacktrace"],[96,"os::sync"],[98,"os::sync::up"],[109,"os::syscall"],[114,"os::syscall::fs"],[116,"os::syscall::process"],[117,"os::trap"],[124,"os::trap::context"],[137,"core::result"],[138,"core::any"],[139,"core::fmt"],[140,"core::fmt"],[141,"log"],[142,"log"]],"d":["batch subsystem","clear BSS segment","SBI console driver, for text output","The panic handler","","print string macro","println string macro","the rust entry-point of os","SBI call wrappers","","Synchronization and interior mutability primitives","Implementation of syscalls","Trap handling functionality","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","init batch subsystem","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","print apps info","","","run next app","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","use sbi call to getchar from console (qemu uart handler)","use sbi call to putchar in console (qemu uart handler)","use sbi call to shutdown the kernel","","","Uniprocessor interior mutability primitives","Wrap a static data structure inside it so that we are able …","","","Exclusive access inner data in UPSafeCell. Panic if the …","Returns the argument unchanged.","inner data","Calls <code>U::from(self)</code>.","User is responsible to guarantee that inner struct is only …","","","","","","File and filesystem-related syscalls","App management syscalls","handle syscall exception with <code>syscall_id</code> and other …","","write buf of length <code>len</code>  to a file with <code>fd</code>","task exits and submit an exit code","Trap Context","","initialize CSR <code>stvec</code> as the entry of <code>__alltraps</code>","CSR sepc","CSR sstatus      ","handle an interrupt, exception, or system call from user …","general regs[0..31]","Trap Context","init app context","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","CSR sepc","set stack pointer to x_2 reg (sp)","CSR sstatus      ","","","","general regs[0..31]"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,7,8,4,3,7,8,4,3,4,7,8,3,7,8,4,3,4,7,8,0,7,8,4,3,4,4,4,0,4,7,0,7,8,4,3,7,8,4,3,7,8,4,3,0,13,13,13,13,0,13,13,13,13,0,0,17,17,17,17,17,0,17,17,17,17,17,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,9,9,0,9,0,9,9,9,9,9,9,9,9,9,9,9,9],"f":"`{{}b}`````{{}d}``````````````````{ce{}{}}0000000```{f{{j{h}}}}{cc{}}000{hl}{nl}{A`l}75555{{hl}b}{hb}`90{{nAb}Ab}9{c{{Ad{e}}}{}{}}0000000{cAf{}}000`::8:{Ahb}221{{AjAl}An}{B`d}`=={{BbBd}Bf}{Bbb}={{}b}{ce{}{}}{{BbBh}b}998{{}l}{lb}{Bfd}5```44{{{j{c}}}{{Bj{c}}}{}}{cc{}}`6{c{{j{c}}}{}}??>````{{l{Bl{l}}}Bn}`{{lC`l}Bn}{Cbd}``;``{AbAb}``{{ll}Ab}<<6<`{{Abl}b}`{c{{Ad{e}}}{}{}}0{cAf{}}`","c":[],"p":[[1,"unit"],[1,"never"],[5,"APP_MANAGER",13],[5,"AppManager",13],[5,"UPSafeCell",98],[1,"usize"],[5,"KernelStack",13],[5,"UserStack",13],[5,"TrapContext",124],[6,"Result",137],[5,"TypeId",138],[5,"Arguments",139],[5,"Stdout",69],[1,"str"],[8,"Result",139],[5,"PanicInfo",140],[5,"SimpleLogger",80],[5,"Metadata",141],[1,"bool"],[5,"Record",141],[5,"RefMut",142],[1,"array"],[1,"isize"],[1,"u8"],[1,"i32"]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
